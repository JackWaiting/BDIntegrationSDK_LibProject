package com.chipsguide.app.colorbluetoothlamp.v2.utils;import android.content.Context;import android.content.res.Resources;import android.graphics.Color;import android.util.Log;import com.chipsguide.app.colorbluetoothlamp.v2.R;import com.chipsguide.lib.bluetooth.extend.devices.BluetoothDeviceColorLampManager;public class ColorUtil {	public static int int2Color(int red ,int green ,int blue)	{		if(red < 0)		{			red = 256+red;		}		if(green < 0)		{			green = 256+green;		}		if(blue < 0)		{			blue = 256+blue;		}		return Color.rgb(red, green, blue);	}		public static String color2String(String color)	{		if(color.length() != 2)		{			color = "0" + color;		}		return color;	}		public static String int2color(int[] color)	{		return colorToString(Color.rgb(color[0], color[1], color[2]));	}		public static String colorToString(int color)	{		String alpha = ColorUtil.color2String(Integer.toHexString(Color.alpha(color)));		String red = ColorUtil.color2String(Integer.toHexString(Color.red(color)));		String green = ColorUtil.color2String(Integer.toHexString(Color.green(color)));		String blue = ColorUtil.color2String(Integer.toHexString(Color.blue(color)));		Log.d("fiskz", "alpha:"+alpha+" red : " +  red +" green " + green + " blue " + blue);		return "#" + alpha + red + green + blue;	}		private static int[] colorsRes = { android.R.color.white, R.color.color_orange,			R.color.color_pink, R.color.color_purple, R.color.color_green,			R.color.color_ching, R.color.color_blue2};	private static final String COLOR_WHITE = "#ffffffff";	private static final String NEW_COLOR_WHITE = "#ffffff";	public static int Color2Color2 (Context context, String colors)	{		Resources res = context.getResources();		int checkedColor = Color.parseColor(colors);		String color = "";		if(res.getColor((colorsRes[1])) == checkedColor)		{			color = ColorUtil.int2color(BluetoothDeviceColorLampManager.Color.COLOR_18);		}		if(res.getColor((colorsRes[2])) == checkedColor)		{			color = ColorUtil.int2color(BluetoothDeviceColorLampManager.Color.COLOR_16);		}		if(res.getColor((colorsRes[3])) == checkedColor)		{			color = ColorUtil.int2color(BluetoothDeviceColorLampManager.Color.COLOR_8);		}		if(res.getColor((colorsRes[4])) == checkedColor)		{			color = ColorUtil.int2color(BluetoothDeviceColorLampManager.Color.COLOR_10);		}		if(res.getColor((colorsRes[5])) == checkedColor)		{			color = ColorUtil.int2color(BluetoothDeviceColorLampManager.Color.COLOR_6);		}		if(res.getColor((colorsRes[6])) == checkedColor)		{			color = ColorUtil.int2color(BluetoothDeviceColorLampManager.Color.COLOR_2);		}		if(COLOR_WHITE.equals(colors))		{			color = NEW_COLOR_WHITE;		}		return Color.parseColor(color);	}	}