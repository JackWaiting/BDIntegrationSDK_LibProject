package com.chipsguide.app.colorbluetoothlamp.v2.adapter;import java.util.HashSet;import java.util.List;import android.content.Context;import android.view.LayoutInflater;import android.view.View;import android.view.View.OnClickListener;import android.view.ViewGroup;import android.widget.BaseAdapter;import android.widget.ImageView;import com.chipsguide.app.colorbluetoothlamp.v2.R;import com.chipsguide.app.colorbluetoothlamp.v2.utils.PreferenceUtil;import com.chipsguide.app.colorbluetoothlamp.v2.widget.ColorImageView;public class GridViewDIYColorAdapter extends BaseAdapter {	private List<String> colors;	private Context mContext;	private LayoutInflater mInflater;	private boolean isVisible = false;	private PreferenceUtil mPreference;	public GridViewDIYColorAdapter(Context context)	{		mContext = context;		mInflater = (LayoutInflater) mContext				.getSystemService(Context.LAYOUT_INFLATER_SERVICE);		mPreference = PreferenceUtil.getIntance(mContext);	}	public void setList(List<String> col)	{		this.colors = col;		notifyDataSetChanged();	}		public void setVisility(boolean flag)	{		isVisible = flag;		notifyDataSetChanged();	}	@Override	public int getCount()	{		if (colors != null)		{			return colors.size();		}		return 0;	}	@Override	public Object getItem(int position)	{		if (colors != null)		{			return colors.get(position);		}		return 0;	}	@Override	public long getItemId(int position)	{		return position;	}	@Override	public View getView(final int position, View convertView, ViewGroup parent)	{		ViewHolder viewHolder = null;		if (convertView == null)		{			viewHolder = new ViewHolder();			convertView = mInflater.inflate(					R.layout.layout_gridview_diycolor_item, null);			viewHolder.magColorImageView = (ColorImageView) convertView					.findViewById(R.id.color_iamgeview);			viewHolder.mColorDel = (ImageView) convertView					.findViewById(R.id.imageview_color_delete);			convertView.setTag(viewHolder);		} else		{			viewHolder = (ViewHolder) convertView.getTag();			viewHolder.magColorImageView					.setImageviewColor(Integer.parseInt(colors.get(position)));			viewHolder.magColorImageView					.setBackgroundResource(R.drawable.round_bg);			if(isVisible)			{				viewHolder.mColorDel.setVisibility(View.VISIBLE);			}else			{				viewHolder.mColorDel.setVisibility(View.GONE);			}			viewHolder.mColorDel.setOnClickListener(new OnClickListener()			{								@Override				public void onClick(View v)				{					colors.remove(position);					//更新颜色					mPreference.setColor(new HashSet<String>(colors));					notifyDataSetChanged();				}			});		}		return convertView;	}	class ViewHolder {		private ColorImageView magColorImageView;		private ImageView mColorDel;	}}